name: Deploy Swing Test App to Hostinger VPS

on:
  push:
    branches:
      - production

jobs:
  deploy:
    name: Build and Deploy with pnpm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: pnpm db:generate

      - name: Build project
        run: pnpm build

      - name: Copy package.json to dist folder
        run: cp package.json dist/

      - name: Copy necessary files to VPS via SCP
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_KEY }}
          source: "dist/**/*,package.json,pnpm-lock.yaml,prisma/**/*"
          target: /root/swing-mag-api
          strip_components: 0

      - name: Restart App on VPS with PM2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USER }}
          key: ${{ secrets.HOSTINGER_KEY }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            export PATH="$NVM_DIR/versions/node/v20.19.4/bin:$PATH"
            cd /root/swing-mag-api

            # Install production dependencies
            pnpm install --prod

            # Generate Prisma client on the server
            pnpm db:generate

            # Create environment file from secrets only if it doesn't exist
            if [ ! -f ".env" ]; then
              cat > .env << EOF
            NODE_ENV=production
            PORT=9999
            LOG_LEVEL=silent
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            DATABASE_AUTH_TOKEN=${{ secrets.DATABASE_AUTH_TOKEN }}
            PUBLIC_APP_URL=${{ secrets.PUBLIC_APP_URL }}
            BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
            BETTER_AUTH_URL=${{ secrets.BETTER_AUTH_URL }}
            UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            EOF
            else
              echo ".env file already exists, preserving it"
            fi

            # Clean up any existing PM2 process for this app only
            if pm2 list | grep -q "swing-mag-prod"; then
              pm2 delete swing-mag-prod
            fi
              pm2 flush

            # Start the application with PM2
            pm2 start dist/src/index.js --name "swing-mag-prod" --interpreter node

            # Save PM2 configuration
            pm2 save

            # Setup PM2 to start on system boot
            pm2 startup
